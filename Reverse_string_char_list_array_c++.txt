
#include <iostream>    //for cout
#include <fstream>     // for ofstream/ifstream
#include <string>     //for << and getline
#include<list>  //for lists

int main(int argc, char *argv[])
{
	std::ifstream input_file("test.txt");
	std::ofstream output_file("test.txt.out");

	//std::list<std::string> elements;
	std::string elements[sizeof("test.txt")];

	std::string line;

	//for (int line_no = 1; std::getline(input_file, line); ++line_no)
	//{
	//	//std::reverse(line.begin(), line.end());
	//	std::string reverse;
	//	//reverse = std::string(line.rbegin(), line.rend());
	//	//std::cout << line << std::endl;
	//	//output_file << line << std::endl;
	//	//std::cout  << reverse << std::endl;
	//	//output_file << reverse << std::endl;

	//	//for (int i = line.size()-1; i >= 0; i--)// this works too for (int i = line.length() - 1; i >= 0; i--)
	//	//{
	//	//	reverse.push_back(line[i]);//reverse string
	//	//}
	//	//std::cout << reverse << std::endl;
	//	//output_file << reverse << std::endl;

	//	//for (int i = 0; i < line.size(); i++)
	//	//{
	//	//	std::cout << line[i] << std::endl;//char
	//	//	output_file << line[i] << std::endl;
	//	//}

	//	for (int i = line.size();i>= 0; i--)
	//	{
	//		std::cout << line[i] << std::endl;//reverse
	//		output_file << line[i] << std::endl;
	//	}
	//}

	//for (int line_no = 1; std::getline(input_file, line); ++line_no)
	//{
	//	elements.push_back(line);//string
	//}

	////std::reverse(elements.begin(),elements.end());
	//elements.reverse();

	//auto iter = elements.begin();
	//for (; iter != elements.end(); ++iter)
	//{
	//	std::cout << (*iter) << std::endl;
	//	output_file << (*iter) << std::endl;
	//}

	int count = 0;
	for (int line_no = 0; std::getline(input_file, line); line_no++)
	{
		elements[line_no] = line;
		++count;
	}

	//for(int line_no = 0; line_no < count;++line_no)
	//{
	//	std::cout << elements[line_no] << std::endl;
	//	output_file << elements[line_no] << std::endl;
	//}

	for (int line_no = count-1; line_no >= 0; --line_no)
	{
		std::cout << elements[line_no] << std::endl;
		output_file << elements[line_no] << std::endl;
	}

	if (input_file)
	{
		input_file.close();
		output_file.close();
	}

	std::cin.get();
	return 0;
}
