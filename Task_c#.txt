
using System;
using System.Collections.Generic;//for string
using System.IO;//to use StreamReader
using System.Threading;// for threads
using System.Threading.Tasks;//for tasks
namespace lec2csharp
{
    class Program
    {
        static void Pullout_contents(string in_file, List<string> elements)
        {
            StreamReader input_file = new StreamReader(in_file.ToString());
            elements.Clear();
            string line = "";
            for (int line_no = 1; (line = input_file.ReadLine()) != null; ++line_no)
            {
                elements.Add(line);
            }
            input_file.Close();
        }
        static void Show_contents(StreamWriter Out, List<string> elements)
        {
            foreach (string iter in elements)
            {
                Console.WriteLine(iter);
            }
        }

        static void Pushin_contents(string out_file, List<string> elements)
        {
            StreamWriter output_file = new StreamWriter(out_file.ToString());
            output_file.AutoFlush = true;
            Console.SetOut(output_file);
            Show_contents(output_file, elements);// using polymorphism
            output_file.Close();
        }
        static void Main(string[] args)
        {
            //StreamReader input = null;
            StreamWriter output = null;

            string in_file;
            in_file = "test.txt";

            string out_file;
            out_file = in_file + ".out";

            List<string> elements = new List<string>();
            elements.Clear();

            //Pullout_contents(in_file, elements);
            //Thread oc = new Thread(() => Pullout_contents(in_file, elements));
            Task oc = new Task(()=>Pullout_contents(in_file,elements));
            oc.Start();
            //oc.Join();//for thread necessary
            oc.Wait();

            //Show_contents(output, elements);
            //Thread sc = new Thread(() => Show_contents(output, elements));
            Task sc = new Task(() => Show_contents(output, elements));
            sc.Start();
            //sc.Join();
            sc.Wait();

            //Pushin_contents(out_file, elements);
            //Thread ic = new Thread(() => Pushin_contents(out_file, elements));
            Task ic = new Task(() => Pushin_contents(out_file, elements));
            ic.Start();
            //ic.Join();
            ic.Wait();

            Console.ReadLine();
        }
    }
}

