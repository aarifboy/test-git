using System;
using System.Collections.Generic;//for string
using System.Linq;//for Count
//using System.Text;
//using System.Threading.Tasks;
using System.IO;//to use StreamReader

namespace lec2csharp
{
    class Program
    {
        static bool Pullout_contents(string in_file, List<string> elements)
        {
            StreamReader input_file = new StreamReader(in_file.ToString());
            elements.Clear();
            string line = "";
            for (int line_no = 1; (line = input_file.ReadLine()) != null; ++line_no)
            {
                elements.Add(line);
            }
            input_file.Close();
            return true;
        }

        static void Show_contents(StreamWriter Out, List<string> elements)
        {
            foreach (string iter in elements)
            {
                Console.WriteLine(iter);
            }
        }

        static bool Pushin_contents(string out_file, List<string> elements)
        {
            StreamWriter output_file = new StreamWriter(out_file.ToString());
            output_file.AutoFlush = true;
            Console.SetOut(output_file);
            Show_contents(output_file, elements);// using polymorphism
            output_file.Close();
            return true;
        }

        static void Main(string[] args)
        {
            //int argc = args.Length;
            int argc = args.Count();
            Console.WriteLine("There are {0} arguments.", argc);
            for (int i = 0; i != argc; ++i)
            {
                Console.WriteLine(args[i]);
            }
            StreamReader input_file = null;
            StreamWriter output_file = null;

            string in_file;
            in_file = args[0];
            //input_file = new StreamReader(in_file.ToString());

            string out_file;
            out_file = args[0];
            //out_file += ".out";
            //output_file = new StreamWriter(out_file.ToString());


            List<string> elements = new List<string>();
            elements.Clear();
            //string line = "";
            //for (int line_no = 1; (line = input_file.ReadLine()) != null; ++line_no)
            //{
            //    elements.Add(line);
            //}

            if (!Pullout_contents(in_file, elements))
            {
                return;
            }

            //foreach (string iter in elements)
            //{
            //    //Console.WriteLine(iter);
            //    output_file.WriteLine(iter);
            //}

            Show_contents(output_file, elements);

            if (!Pushin_contents(out_file + ".out", elements))
            {
                return;
            }

            if (input_file != null)
            {
                input_file.Close();
                output_file.Close();
            }
            Console.ReadLine();
        }
    }
}
