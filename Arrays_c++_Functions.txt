
#include <iostream>    //for cout
#include <fstream>     // for ofstream/ifstream
#include <string>     //for << and getline
#include <list>  //for lists
#include<array> //for arrays

class file_element
{
public:
	std::string line;
};

void pullout_contents(std::string in_file,std::array< file_element,100> &elements)
//void pullout_contents(std::string in_file, file_element elements[])
//void pullout_contents(std::string in_file, std::list<file_element> &elements)
{
	std::ifstream input_file(in_file.c_str());

	std::string line;
	for (int line_no = 1; std::getline(input_file, line); ++line_no)
	{
		file_element element;
		element.line = line;

		//elements.push_back(element);
		elements[line_no] = element;
	}
	input_file.close();
}

void show_contents(std::ostream &out, std::array<file_element,100> elements)
//void show_contents(std::ostream &out, const file_element elements[])
//void show_contents(std::ostream &out, std::list<file_element> elements)
{
	//std::list<file_element>::const_iterator iter = elements.begin();
	//for (; iter != elements.end(); ++iter)
	//{
	//	out << (*iter).line << std::endl;
	//}
	for (int i = 0; i < elements.size(); i++)
	//for (int i = 0; i < 10; i++)
	{		
		out << elements[i].line << std::endl;
	}
}

void pushin_contents(std::string out_file, std::array<file_element,100> elements)
//void pushin_contents(std::string out_file, const file_element elements[])
//void pushin_contents(std::string out_file, std::list<file_element> elements)
{
	std::ofstream output_file(out_file.c_str());
	show_contents(output_file, elements);// using polymorphism
	output_file.close();
}


int main(int argc, char *argv[])
{
	//std::string file = "test.txt";
	std::string in_file = "test.txt";

	std::string out_file = "test.txt.out";

	//std::list<file_element> elements;
	//file_element elements[sizeof(in_file)];
	//file_element *elements = new file_element[sizeof(in_file)];
	std::array<file_element, 100> elements = { {} };

	pullout_contents(in_file, elements);

	show_contents(std::cout, elements);

	pushin_contents(out_file, elements);

	std::cin.get();
	return 0;
}
