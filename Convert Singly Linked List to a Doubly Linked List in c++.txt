#include <iostream>    //for cout
#include <fstream>     // for ofstream/ifstream
#include <string>     //for << and getline
#include <forward_list>
#include <list>


struct List
{
	std::string data;
	List *next, *prev;
	//List(std::string d) :data(d),next(NULL) {};
	List(std::string d) :data(d), next(NULL),prev(NULL) {};
};


int main()
{
	std::ifstream input_file("test.txt");
	std::ofstream output_file("test.txt.out");

	//List *elements, *node, *iter;
	//elements = node =iter = NULL;

	//std::forward_list<std::string> elements;
	std::list<std::string> elements;

	std::string line;
	for (; std::getline(input_file, line);)
	{
		//iter = new List(line);

		//if (elements == NULL) {
		//	elements = iter;
		//}
		//else {
		//	node = elements;
		//	while (node->next != NULL) {
		//		node = node->next;
		//	}
		//	node->next = iter;
		//	iter->prev = node;
		//}



		//auto it = elements.before_begin();
		//while (std::next(it) != elements.end()){
		//	it++;
		//}
		//elements.insert_after(it, line);
		elements.push_back(line);
	}

	//iter = elements;
	//for (; iter->next != NULL; iter = iter->next){}
	//for (; iter != NULL; iter = iter->prev)
	////for (; iter != NULL; iter = iter->next)
	//{
	//	std::cout << iter->data << std::endl;
	//	output_file << iter->data << std::endl;
	//}

	//elements.reverse();
	//std::forward_list<std::string>::iterator iter = elements.begin();
	//std::list<std::string>::iterator iter = elements.begin();
	std::list<std::string>::reverse_iterator iter = elements.rbegin();
	//for (; iter != elements.end(); ++iter)
	for (; iter != elements.rend(); ++iter)
	{
		std::cout << (*iter) << std::endl;
		output_file << (*iter) << std::endl;
	}

	//delete iter;
	//iter = NULL;

	if (input_file)
	{
		input_file.close();
		output_file.close();
	}
	std::cin.get();
	return 0;
}
