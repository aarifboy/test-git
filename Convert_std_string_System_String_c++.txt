//MyForm.h is one file

#pragma once
#include <iostream> 
#include <msclr\marshal_cppstd.h>//to convert std::string to String ^ and vice versa

namespace guicpp {

	using namespace System;
	using namespace System::ComponentModel;
	using namespace System::Collections;
	using namespace System::Windows::Forms;
	using namespace System::Data;
	using namespace System::Drawing;
	using namespace Runtime::InteropServices;//For Marshal

	/// <summary>
	/// Summary for MyForm
	/// </summary>
	public ref class MyForm : public System::Windows::Forms::Form
	{
	public:
		MyForm(void)
		{
			InitializeComponent();
			//
			//TODO: Add the constructor code here
			//
		}

	protected:
		/// <summary>
		/// Clean up any resources being used.
		/// </summary>
		~MyForm()
		{
			if (components)
			{
				delete components;
			}
		}
	private: System::Windows::Forms::Button^  button1;
	protected:
	private: System::Windows::Forms::Label^  label1;
	private: System::Windows::Forms::TextBox^  textBox1;

	private:
		/// <summary>
		/// Required designer variable.
		/// </summary>
		System::ComponentModel::Container ^components;

#pragma region Windows Form Designer generated code
		/// <summary>
		/// Required method for Designer support - do not modify
		/// the contents of this method with the code editor.
		/// </summary>
		void InitializeComponent(void)
		{
			this->button1 = (gcnew System::Windows::Forms::Button());
			this->label1 = (gcnew System::Windows::Forms::Label());
			this->textBox1 = (gcnew System::Windows::Forms::TextBox());
			this->SuspendLayout();
			// 
			// button1
			// 
			this->button1->Location = System::Drawing::Point(151, 111);
			this->button1->Name = L"button1";
			this->button1->Size = System::Drawing::Size(232, 94);
			this->button1->TabIndex = 0;
			this->button1->Text = L"Show OP";
			this->button1->UseVisualStyleBackColor = true;
			this->button1->Click += gcnew System::EventHandler(this, &MyForm::button1_Click);
			// 
			// label1
			// 
			this->label1->AutoSize = true;
			this->label1->Location = System::Drawing::Point(99, 49);
			this->label1->Name = L"label1";
			this->label1->Size = System::Drawing::Size(31, 20);
			this->label1->TabIndex = 1;
			this->label1->Text = L"OP";
			// 
			// textBox1
			// 
			this->textBox1->Location = System::Drawing::Point(103, 243);
			this->textBox1->Multiline = true;
			this->textBox1->Name = L"textBox1";
			this->textBox1->Size = System::Drawing::Size(150, 80);
			this->textBox1->TabIndex = 2;
			this->textBox1->Text = L"IP";
			// 
			// MyForm
			// 
			this->AutoScaleDimensions = System::Drawing::SizeF(9, 20);
			this->AutoScaleMode = System::Windows::Forms::AutoScaleMode::Font;
			this->ClientSize = System::Drawing::Size(524, 365);
			this->Controls->Add(this->textBox1);
			this->Controls->Add(this->label1);
			this->Controls->Add(this->button1);
			this->Name = L"MyForm";
			this->Text = L"MyForm";
			this->ResumeLayout(false);
			this->PerformLayout();

		}
#pragma endregion
	private: System::Void button1_Click(System::Object^  sender, System::EventArgs^  e) {
		/*
		//MessageBox::Show("This is Arif");
		String ^ str = textBox1->Text;
		//MessageBox::Show(str);
		label1->Text = str;
		Console::WriteLine(str);
		*/	

		//std::string str = msclr::interop:: marshal_as<std::string>(textBox1->Text);
		std::string str = (const char*)(Marshal::StringToHGlobalAnsi(textBox1->Text)).ToPointer();
		Marshal::FreeHGlobal(IntPtr((void*)(const char*)(Marshal::StringToHGlobalAnsi(textBox1->Text)).ToPointer()));

		//String ^ms = msclr::interop::marshal_as<String^>(str);//std::string to String ^
		String ^ms = gcnew String(str.c_str());
		MessageBox::Show(ms);
		label1->Text = ms;

		//std::cout << (str);//use std::string
		Console::WriteLine(ms);//use String ^
		
	}
	};
}


//MyForm.cpp is another file

#include "MyForm.h"

using namespace System;
using namespace System::Windows::Forms;

[STAThreadAttribute]
int main()
//int main (array<String^>^args )
{
	Application::EnableVisualStyles();
	Application::SetCompatibleTextRenderingDefault(false);
	guicpp::MyForm form;
	Application::Run(%form);
	return 0;
}

